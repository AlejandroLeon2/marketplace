---
import EstadoProducto from "./EstadoProducto.astro";
import Xcirculo from "../components/svg/Xcirculo.astro";
const { data } = Astro.props;
---

<section class="p-4 bg-gray-50 rounded shadow w-full max-w-6xl mx-auto">
  <!-- Filtros y búsqueda -->
  <div class="mb-6 gap-4">
    <div class="flex justify-between items-center mb-4 gap-6">
      <!-- Menú de filtros -->
      <div class="hidden md:flex gap-4 bg-white p-2 rounded-full shadow">
        <button
          class="bg-gray-500 text-white hover:bg-gray-600 px-4 py-2 rounded-full"
          >Ventas de hoy</button
        >
        <button
          class="bg-gray-500 text-white hover:bg-gray-600 px-4 py-2 rounded-full"
          >Ventas de la semana</button
        >
        <button
          class="bg-gray-500 text-white hover:bg-gray-600 px-4 py-2 rounded-full"
          >Ventas del mes</button
        >
      </div>

      <!-- Menú hamburguesa en móviles -->
      <div class="md:hidden relative">
        <button
          id="menu-btn"
          aria-haspopup="true"
          aria-expanded="false"
          class="px-4 py-2 bg-gray-500 text-white rounded-full shadow hover:bg-gray-600"
        >
          Filtros
        </button>
        <div
          id="menu"
          role="menu"
          aria-labelledby="menu-btn"
          class="hidden absolute left-0 mt-2 w-56 rounded-md shadow-lg bg-white text-gray-800 ring-1 ring-black/10 z-40"
        >
          <button
            role="menuitem"
            class="block px-4 py-2 hover:bg-gray-100 w-full"
            >Ventas de hoy</button
          >
          <button
            role="menuitem"
            class="block px-4 py-2 hover:bg-gray-100 w-full"
            >Ventas de la semana</button
          >
          <button
            role="menuitem"
            class="block px-4 py-2 hover:bg-gray-100 w-full"
            >Ventas del mes</button
          >
        </div>
      </div>

      <!-- Buscador -->
      <input
        type="text"
        placeholder="  Buscar..."
        class="border p-2 rounded-full w-full md:w-1/3 focus:outline-none focus:ring-2 focus:ring-gray-400"
      />
    </div>
  </div>

  <!-- Contador de ventas -->
  <div class="mb-6">
    <p class="text-sm ml-4 mb-2">
      Total de ventas:
      <span class="font-semibold">0</span>
    </p>
  </div>

  <!-- Estado vacío -->
  <ul class=" flex flex-col space-y-2">
 {data && data.length > 0 ? (
  <ul class="flex flex-col space-y-2">
    {data.map((datas) => (
      <li>
        <EstadoProducto libro={datas} />
      </li>
    ))}
  </ul>
) : (
  <div class="flex flex-col items-center space-y-2">
    <Xcirculo />
    <p class="text-gray-500">El filtro seleccionado no muestra resultados</p>
  </div>
)}

  </ul>
</section>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const menuBtn = document.getElementById(
      "menu-btn"
    ) ;
    const menu = document.getElementById("menu")  ;

    function closeMenu(){
      if (!menu || !menuBtn) return;
      menu.classList.add("hidden");
      menuBtn.setAttribute("aria-expanded", "false");
    }

    if (menuBtn && menu) {
      // Toggle menú
      menuBtn.addEventListener("click", (e) => {
        e.stopPropagation();
        const isHidden = menu.classList.contains("hidden");
        if (isHidden) {
          menu.classList.remove("hidden");
          menuBtn.setAttribute("aria-expanded", "true");
        } else {
          closeMenu();
        }
      });

      // Cerrar al hacer clic fuera
      document.addEventListener("click", (e) => {
        const target = e.target ;
        if (!menu.contains(target) && target !== menuBtn) {
          closeMenu();
        }
      });

      // Cerrar con ESC
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") closeMenu();
      });
    }
  });
</script>
